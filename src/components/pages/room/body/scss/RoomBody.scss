$grid__bp-md: 768;
$grid__bp-lg: 992;
$grid__cols: 12;

$map-grid-props: ('-sm': 0, '-md': $grid__bp-md, '-lg': $grid__bp-lg);


@mixin create-mq($breakpoint) {
    @if($breakpoint == 0) {
      @content;
    } @else {
      @media screen and (min-width: $breakpoint *1px) {
        @content;
      }
    }
  }


  
@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
    @include create-mq($breakpoint) {
      @for $i from 1 through $grid-cols {
        &__col#{$modifier}-#{$i} {
          flex-basis: (100 / ($grid-cols / $i) ) * 1%;
        }
      }
    }
  }
  
  .container {
    max-width: $grid__bp-md * 1px;
    margin: 0 auto;
    &--fluid {
      margin: 0;
      max-width: 100%;
    }
    &__row {
      display: flex;
      flex-wrap: wrap;
      width: 100%;
    }
    @each $modifier , $breakpoint in $map-grid-props {
      @include create-col-classes($modifier, $grid__cols, $breakpoint);
    }
  }

.room-body {
    height: 65%;
    .room-msg {
        margin: auto;
        background: green;
        width: 50%;
        max-height: 20rem;
        display: flex;
        align-items: center;
        & div {
            text-align: center;
            height: auto;
            width: 100%;
        }
    }

    .room-time-selection-container {
        background: chocolate;
        margin: 1em auto 1em auto;
        height: fit-content;
        width: fit-content;
        .room-time-msg {
            height: 5rem;
        }
    }
}

